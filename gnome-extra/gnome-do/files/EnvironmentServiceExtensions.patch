=== modified file 'Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/EnvironmentServiceExtensions.cs'
--- Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/EnvironmentServiceExtensions.cs	2009-08-14 17:47:47 +0000
+++ Do.Platform.Linux/src/Do.Platform/Do.Platform.Linux/EnvironmentServiceExtensions.cs	2010-02-14 18:16:20 +0000
@@ -68,36 +68,35 @@
 			}
 
 			userDirsPath = Path.Combine (configDir, "user-dirs.dirs");
-			if (!File.Exists (userDirsPath)) {
-				return Path.Combine (homeDir, fallback);
-			}
-
-			try {
-				using (StreamReader reader = new StreamReader (userDirsPath)) {
-					string line;
-					while ((line = reader.ReadLine ()) != null) {
-						line = line.Trim ();
-						int delimIndex = line.IndexOf ('=');
-						if (delimIndex > 8 && line.Substring (0, delimIndex) == key) {
-							string path = line.Substring (delimIndex + 1).Trim ('"');
-							bool relative = false;
-
-							if (path.StartsWith ("$HOME/")) {
-								relative = true;
-								path = path.Substring (6);
-							} else if (path.StartsWith ("~")) {
-								relative = true;
-								path = path.Substring (1);
-							} else if (!path.StartsWith ("/")) {
-								relative = true;
+
+			if (File.Exists (userDirsPath)) {
+				try {
+					using (StreamReader reader = new StreamReader (userDirsPath)) {
+						string line;
+						while ((line = reader.ReadLine ()) != null) {
+							line = line.Trim ();
+							int delimIndex = line.IndexOf ('=');
+							if (delimIndex > 8 && line.Substring (0, delimIndex) == key) {
+								string path = line.Substring (delimIndex + 1).Trim ('"');
+								bool relative = false;
+
+								if (path.StartsWith ("$HOME/")) {
+									relative = true;
+									path = path.Substring (6);
+								} else if (path.StartsWith ("~")) {
+									relative = true;
+									path = path.Substring (1);
+								} else if (!path.StartsWith ("/")) {
+									relative = true;
+								}
+								return relative ? Path.Combine (homeDir, path) : path;
 							}
-							return relative ? Path.Combine (homeDir, path) : path;
 						}
 					}
+				} catch (FileNotFoundException) {
 				}
-			} catch (FileNotFoundException) {
 			}
-			
+
 			return fallback == null 
 				? null
 				: Path.Combine (homeDir, fallback);

